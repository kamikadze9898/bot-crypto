import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.client.default import DefaultBotProperties

BOT_TOKEN = "7537615401:AAHs03_8a572MidL_3wdHexpqaIH_zC22WQ"
ADMIN_ID = -1002544079940  # ID –∞–¥–º—ñ–Ω–∞
NOTION_LINK = "https://ivy-height-7a0.notion.site/1ec3a0a9187080ada9c4dfb2a113b80f?pvs=4"  # –°—Å—ã–ª–∫–∞ –Ω–∞ —à–∞–±–ª–æ–Ω

# –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –ö–Ω–æ–ø–∫–∏
def get_main_keyboard():
    kb = InlineKeyboardBuilder()
    kb.button(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç–∏", callback_data="pay")
    return kb.as_markup()

def get_confirm_keyboard(user_id, confirmed=None):
    """ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è """
    if confirmed is None:
        return InlineKeyboardMarkup(inline_keyboard=[ 
            [InlineKeyboardButton(text="‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –æ–ø–ª–∞—Ç—É", callback_data=f"confirm:{user_id}")],
            [InlineKeyboardButton(text="‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ–π—à–ª–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑", callback_data=f"retry:{user_id}")],
        ])
    elif confirmed:
        return InlineKeyboardMarkup(inline_keyboard=[ 
            [InlineKeyboardButton(text="‚úÖ –û–ø–ª–∞—Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞ ‚úÖ", callback_data="confirmed")],
        ])
    else:
        return InlineKeyboardMarkup(inline_keyboard=[ 
            [InlineKeyboardButton(text="‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ–π—à–ª–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑", callback_data=f"retry:{user_id}")],
        ])

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(CommandStart())
async def start(message: Message):
    await message.answer(
        "<b>üöÄ –í—Å—Ç—É–ø–∞–π —É —Å–≤—ñ—Ç –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∑ –Ω–∞—à–∏–º —à–∞–±–ª–æ–Ω–æ–º Notion!</b>\n\n"
        
        "<i>–•–æ—á–µ—à —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—è –≤ –∫—Ä–∏–ø—Ç—ñ? –ù–∞—à —à–∞–±–ª–æ–Ω ‚Äî —Ü–µ —ñ–¥–µ–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ä—Ç –¥–ª—è –Ω–æ–≤–∞—á–∫–∞!</i> üí°\n\n"
        
        "<b>üîç –©–æ —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à:</b>\n\n"
        
        "‚Ä¢ <b>–ü–æ—è—Å–Ω–µ–Ω–Ω—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏ –ø—Ä–æ—Å—Ç–∏–º–∏ —Å–ª–æ–≤–∞–º–∏:</b> –©–æ —Ç–∞–∫–µ –∫—Ä–∏–ø—Ç–∞, –±–ª–æ–∫—á–µ–π–Ω, —Ç–æ–∫–µ–Ω–∏ —Ç–∞ –±—ñ—Ç–∫–æ—ó–Ω. –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω–æ! üîë\n\n"
        
        "‚Ä¢ <b>–ö—Ä–æ–∫–∏ –¥–ª—è –ø–æ—á–∞—Ç–∫—É:</b> –Ø–∫ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫—Ä–∏–ø—Ç–æ–≥–∞–º–∞–Ω–µ—Ü—å, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è MetaMask, Binance, OKX, —ñ –∫—É–ø—É–≤–∞—Ç–∏ –∫—Ä–∏–ø—Ç—É üí≥\n\n"
        
        "‚Ä¢ <b>–Ü–¥–µ—ó –¥–ª—è –∑–∞—Ä–æ–±—ñ—Ç–∫—É:</b> Airdrops, —Ñ–∞—Ä–º—ñ–Ω–≥, ICO ‚Äî –∑–Ω–∞–π–¥–∏ –¥–ª—è —Å–µ–±–µ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –∑–∞—Ä–æ–±—ñ—Ç–∫—É! üí∞\n\n"
        
        "‚Ä¢ <b>–Ø–∫ –≤–∏–≤–µ—Å—Ç–∏ –∫—Ä–∏–ø—Ç—É:</b> –ü–æ–∫—Ä–æ–∫–æ–≤—ñ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –∑ –ø–æ–∫—É–ø–∫–∏, –æ–±–º—ñ–Ω—É —Ç–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤ –≥—Ä–∏–≤–Ω—ñ –∞–±–æ –¥–æ–ª–∞—Ä–∏ üí∏\n\n"
        
        "<b>–¶–µ —Ç–≤—ñ–π –ø–µ—Ä—à–∏–π –∫—Ä–æ–∫ –¥–æ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ—ó —Å–≤–æ–±–æ–¥–∏! –ü–æ—á–Ω–∏ –∑–∞—Ä–æ–±–ª—è—Ç–∏ –≤–∂–µ –∑–∞—Ä–∞–∑! üöÄ</b>\n\n"
        
        "<b>–ù–∞—Ç–∏—Å–∫–∞–π –∫–Ω–æ–ø–∫—É, —â–æ–± –ø—Ä–∏–¥–±–∞—Ç–∏ —à–∞–±–ª–æ–Ω:</b> üëá",
        reply_markup=get_main_keyboard()
    )

# –ö–Ω–æ–ø–∫–∞ "–û–ø–ª–∞—Ç–∏—Ç–∏"
@dp.callback_query(F.data == "pay")
async def show_payment_info(callback: CallbackQuery):
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.delete()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.answer(
    "<b>–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏:</b>\n\n"
    "<i>–©–æ–± —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏, –ø—Ä–æ—Å—Ç–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∏.</i>\n\n"
    
    "<b>üîπ –ö–∞—Ä—Ç–∫–∞:</b> <code>4149 4990 9532 4495</code>\n"
    "<b>üîπ –°—É–º–∞:</b> <u>10$ = 400–≥—Ä–Ω</u>\n\n"
    
    "üìù <i>–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏, –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Å–∫—Ä—ñ–Ω—à–æ—Ç –≤–∞—à–æ—ó –æ–ø–ª–∞—Ç–∏ ‚¨áÔ∏è</i>\n\n"
    
    "<b>‚ùóÔ∏è –ù–µ –∑–∞–±—É–≤–∞–π—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å —Ä–µ–∫–≤—ñ–∑–∏—Ç—ñ–≤!</b>"
)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
@dp.message(F.photo)
async def handle_photo(message: Message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
    bot.temp_photo = message.photo[-1].file_id
    bot.temp_user = message.from_user.id

    # –ù–µ —É–¥–∞–ª—è–µ–º —Ñ–æ—Ç–æ
    # –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ —Ñ–æ—Ç–æ
    if message.content_type == 'text':
        await message.delete()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    await message.answer(
    "üì∏ <b>–°–∫—Ä—ñ–Ω—à–æ—Ç –æ—Ç—Ä–∏–º–∞–Ω–æ!</b>\n\n"
    "–¢–µ–ø–µ—Ä, –±—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ –æ—Å—Ç–∞–Ω–Ω—ñ <b>4 —Ü–∏—Ñ—Ä–∏ –∫–∞—Ä—Ç–∫–∏</b>, –∑ —è–∫–æ—ó —Ç–∏ –∑–¥—ñ–π—Å–Ω–∏–≤ –æ–ø–ª–∞—Ç—É.\n\n"
    "<i>–¶–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.</i>"
)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–∏—Ñ—Ä –∫–∞—Ä—Ç—ã
@dp.message(F.text)
async def handle_card_digits(message: Message):
    if not hasattr(bot, 'temp_photo') or not hasattr(bot, 'temp_user'):
        await message.answer("‚ùóÔ∏è –°–ø–æ—á–∞—Ç–∫—É –Ω–∞–¥—ñ—à–ª–∏ —Å–∫—Ä—ñ–Ω—à–æ—Ç –æ–ø–ª–∞—Ç–∏.")
        return

    digits = message.text

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ü–∏—Ñ—Ä
    if len(digits) != 4 or not digits.isdigit():
        await message.answer("‚ùóÔ∏è –í–≤–µ–¥—ñ—Ç—å —Å–∞–º–µ 4 —Ü–∏—Ñ—Ä–∏ –∫–∞—Ä—Ç–∫–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
        return

    username = f"@{message.from_user.username}" if message.from_user.username else "–ë–µ–∑ username"
    
    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∞–¥–º—ñ–Ω—É –∑ —Ñ–æ—Ç–æ —Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
    await bot.send_photo(
        chat_id=ADMIN_ID,
        photo=bot.temp_photo,
        caption=(f"üí∞ <b>–ù–æ–≤–∞ –æ–ø–ª–∞—Ç–∞!</b>\n\n"
                 f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {username}\n"
                 f"üÜî ID: <code>{message.from_user.id}</code>\n"
                 f"üí≥ 4 —Ü–∏—Ñ—Ä–∏ –∫–∞—Ä—Ç–∫–∏: <b>{digits}</b>"),
        reply_markup=get_confirm_keyboard(message.from_user.id)
    )

    await message.answer(
    "<b>üîç –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –∑–∞—Ä–∞–∑ –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ.</b>\n\n"
    "<i>–ë—É–¥—å –ª–∞—Å–∫–∞, –æ—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.</i> ‚è≥\n\n"
    "<i>–ó–∞—è–≤–∫–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—é—Ç—å—Å—è –∑ <b>09:00 –¥–æ 00:00</b>.\n"
    "–Ø–∫—â–æ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–ª–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞ –ø—ñ—Å–ª—è <b>00:00</b>, –≤–æ–Ω–∞ –±—É–¥–µ –æ–±—Ä–æ–±–ª–µ–Ω–∞ —ñ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞ –æ <b>09:00</b>.</i>\n\n"
    "–ù–µ —Ö–≤–∏–ª—é–π—Ç–µ—Å—è, –≤—Å–µ –±—É–¥–µ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –≤—á–∞—Å–Ω–æ. –î—è–∫—É—î–º–æ –∑–∞ —Ç–µ—Ä–ø—ñ–Ω–Ω—è!"
)

# –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ–ø–ª–∞—Ç–∏
@dp.callback_query(F.data.startswith("confirm:"))
async def confirm_payment(callback: CallbackQuery):
    user_id = int(callback.data.split(":")[1])
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    new_keyboard = get_confirm_keyboard(user_id, confirmed=True)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –Ω–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ç–µ–∫—É—â–µ–π
    if callback.message.reply_markup != new_keyboard:
        await callback.message.edit_reply_markup(reply_markup=new_keyboard)
    
    await bot.send_message(user_id, f"‚úÖ –û–ø–ª–∞—Ç—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ! –û—Å—å —Ç–≤—ñ–π —à–∞–±–ª–æ–Ω:\n{NOTION_LINK}\n\n"
    "<b>üéâ –í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–∫—É–ø–∫–æ—é!</b>\n\n"
    "<i>–í–∞—à —à–∞–±–ª–æ–Ω —É—Å–ø—ñ—à–Ω–æ –ø—Ä–∏–¥–±–∞–Ω–æ! üõí</i>\n\n"
    "<b>–©–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ –≤–∞—à —à–∞–±–ª–æ–Ω:</b>\n"
    "<i>1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ —Ü–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ —à–∞–±–ª–æ–Ω —É Notion:</i>\n\n"
    "<i>2Ô∏è‚É£ –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É <b>¬´Duplicate¬ª</b>, —â–æ–± –¥–æ–¥–∞—Ç–∏ —à–∞–±–ª–æ–Ω –¥–æ —Å–≤–æ–≥–æ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É Notion.</i>\n\n"
    "<i>3Ô∏è‚É£ –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –≤–∏ –∑–º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —à–∞–±–ª–æ–Ω –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ —É —Å–≤–æ—î–º—É –∞–∫–∞—É–Ω—Ç—ñ! ‚ú®</i>\n\n"
    "<b>üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —à–∞–±–ª–æ–Ω –ø—ñ–¥ —Å–µ–±–µ!</b>\n\n"
    "<b>üôè –î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –ú–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ü–µ–π —à–∞–±–ª–æ–Ω –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º –¥–æ—Å—è–≥—Ç–∏ –Ω–æ–≤–∏—Ö –≤–∏—Å–æ—Ç —É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–º—É —Å–≤—ñ—Ç—ñ!</b>\n\n"
    "<b>üöÄ –ë–∞–∂–∞—î–º–æ –≤–µ–ª–∏–∫–∏—Ö —É—Å–ø—ñ—Ö—ñ–≤ —Ç–∞ –ø—Ä–æ—Ñ—ñ—Ç—ñ–≤! üí∏</b>"
)
    await callback.answer("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ —à–∞–±–ª–æ–Ω ‚úÖ")

# –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–≤–¥–∞–ª—É –æ–ø–ª–∞—Ç—É
@dp.callback_query(F.data.startswith("retry:"))
async def retry_payment(callback: CallbackQuery):
    user_id = int(callback.data.split(":")[1])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ–ø–ª–∞—Ç—ã
    await bot.send_message(
        user_id,
        "‚ùå <b>–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ–π—à–ª–∞.</b>\n\n"
    "<i>–ù–∞ –∂–∞–ª—å, –≤–∞—à –ø–ª–∞—Ç—ñ–∂ –Ω–µ –±—É–≤ –∑–Ω–∞–π–¥–µ–Ω–∏–π —É —Å–∏—Å—Ç–µ–º—ñ.</i>\n\n"
    "üîÑ <b>–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.</b>\n\n"
    "‚ùì –Ø–∫—â–æ –≤–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ ‚Äî <b>–º–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏</b>.\n\n"
    "üí¨ –ú–∏ –∑–∞–≤–∂–¥–∏ —Ä–∞–¥—ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏!",
        reply_markup=get_main_keyboard()  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É "–û–ø–ª–∞—Ç–∏—Ç–∏"
    )
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ–ø–ª–∞—Ç—ã (—Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–≤—Ç–æ—Ä–∏—Ç–∏ –æ–ø–ª–∞—Ç—É")
    new_keyboard = get_confirm_keyboard(user_id, confirmed=False)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –Ω–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ç–µ–∫—É—â–µ–π
    if callback.message.reply_markup != new_keyboard:
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–π
        await callback.message.edit_reply_markup(reply_markup=new_keyboard)

    await callback.answer("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä—É –æ–ø–ª–∞—Ç–∏.")

# –ó–∞–ø—É—Å–∫
async def main():
    try:
        await dp.start_polling(bot)
    except asyncio.CancelledError:
        print("Polling was canceled")

if __name__ == "__main__":
    asyncio.run(main())
